const gv = require('./globalVariables')
const dbcont = require('./dbcontroller');
const crypto = require('crypto');
const shortid = require('shortid');
const paym = require('./payment');
const errHandle  = require('./serverErrorHandling')
//<Mongoose>
const mongoose = require('mongoose');
const Users = require('../api/models/users');
const Pay_Id = require('../api/models/user_pay_id')
const Cpanel = require('../api/models/cpanel')
const { users } = require('./globalVariables');
//</Mongoose>
//Insta.setKeys(gv.INSTA_MOJO_API_KEY,gv.INSTA_MOJO_AUTH_KEY);
let log={};

log.LoginUser = async (req,res)=>
{
    const {email,pass} = req.body;
    console.log(req.body)
        dbcont.IfPassCorrect(req.body,req)
        .then(()=>
        {
            res.status(200).send({message:'login success'});
        })
        .catch((code)=>
        {
            var resp = {
                message:gv.code_message[code].toString()
            }
            res.status(404).json(resp)
        
        });
        ///Set Session Id
}
log.SignupUser = async (req,res)=>
{
    console.log(req.files);
    const {firstname,lastname,email,pass,aadhar,phno,categ,dob,age,sex,bloodgrp,address,qualification,techqualification,exp,utubelink} = req.body;
        dbcont.AddNewUser(req.body,req)
        .then((id)=>
        {
            console.log("Payment Entered")
            req.session.UserId = id;
            NotFree(id)
            .then(()=>
            {
                //<Redirect URL Playload>
                console.log("Paid Signup")
                var key = Crypto_Encrypt(id);
                var pid = shortid.generate().toString();
                pid = pid + Date.now().toString();
                var pay_id = new Pay_Id({
                    id:id,
                    pay_id:pid
                });
                pay_id.save();
                var playload =
                {
                    id:key,
                    pid:pid
                }
                var load = JSON.stringify(playload);
                load = Crypto_Encrypt(load);
                //</Redirect URL Playload>
                const data = new Insta.PaymentData();
                data.purpose=gv.INSTA_MOJO_PURPOSE;
                data.amount = gv.INSTA_MOJO_AMOUNT;
                data.currency =gv.INSTA_MOJO_CURRENCY;
                data.send_sms = gv.INSTA_MOJO_SEND_SMS;
                data.send_mail = gv.INSTA_MOJO_SEND_MAIL;
                data.allow_repeated_payments  = gv.INSTA_MOJO_REPEATED;
                data.buyer_name = (req.body.firstname + " "+ req.body.lastname);
                data.email = req.body.email;
                console.log("Phno: "+phno);
                data.phone = phno;
                //data.webhook_url = '/webhook/';
                data.redirect_url =`${gv.INSTA_MOJO_REDIRECT_URL}/u/p?p=${load}`;
		console.log(data)
                paym.createPayment(data)
                .then((response)=>
                {
                        console.log(response)
                        req.session.is = true;
                        console.log("Redirect");
                        var resp = JSON.parse(response);
                        var redir = resp.payment_request.longurl;
                        console.log(redir);
                        res.redirect(redir);
                })
                .catch((err)=>
                {
                    console.log(err)
                    res.send("Payment Failed") 
                })
            })
            .catch(()=>{
                console.log("Free Signup")
                res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/artists`);
            })
            
        })
        .catch((code)=>
        {
            res.render('signup',{error:gv.code_message[code]})
        });
    }
    

log.Validate_Update_Payment= async (obj,req,res)=>
{

    try
    {
    console.log(obj);
    const{p,payment_id,payment_request_id,payment_status} = obj;
    if(payment_status=='Credit')
    {
        var load = Crypto_Decrypt(p.toString());
        load = JSON.parse(load);
        console.log("Pid : " +load.pid);
        var i = Crypto_Decrypt(load.id);
        Pay_Id.find({pay_id:load.pid},function (err, docs) 
        {
            console.log(docs);
            if (docs.length>0&&docs.length>=0&&docs[0].id == i &&!err)
            {
                Users.find({id:i},(err,UserResult)=>
                {
                
                var lastPayed = new Date(UserResult[0].lastPayed)
                if(UserResult[0].lastPayed!=null||UserResult[0].lastPayed!=undefined)
                {
                    var now = new Date(GetDate().toString())
                    var monthpassed = monthDiff(lastPayed,now);
                }
                if(UserResult[0].lastPayed==null||UserResult[0].lastPayed==undefined||monthpassed>=12)
                {
                    Users.update({id:i},{IsPayed:true,IsRenewed:true,lastPayed:GetDate(),$addToSet:{
                        payment:[
                            {
                                payment_id:payment_id,
                                payment_request_id:payment_request_id,
                                date:GetDate()
                            }
                        ]
                    }})
                    .then((result)=>{
                        console.log("Payment Successful");
                        console.log(result);
                        req.session.r = false;
                        req.session.UserId = i;
                    // res.send("Payment Successful")
                        Pay_Id.deleteOne({id:i}).then(()=>res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/artists`));
                                        
                    })
                    .catch(err=>
                    {
                        console.log(err)
                        Pay_Id.deleteOne({id:i}).then(()=>res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/home`));
                        //res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/home`);
                    });
                }
                else
                {
                    Pay_Id.deleteOne({id:i}).then(()=>res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/home`));
                }
                })
            }
            
            else
            {
                console.log("Payment Unsuccessful");
                //res.send("Payment Unsuccessful")
                Pay_Id.deleteOne({id:i}).then(()=>res.redirect(`${gv.INSTA_MOJO_REDIRECT_URL}/home`));
            }
            
        })
    }
}
catch(err){
    console.log(err);
    errHandle.reportErr(req,res,'404');
}
}
function GetDate(){
    var nowDate = new Date(); 
    var date = nowDate.getFullYear()+'-'+(nowDate.getMonth()+1)+'-'+nowDate.getDate(); 
    return date;
  }
  function monthDiff(dateFrom, dateTo) {
    return dateTo.getMonth() - dateFrom.getMonth() + 
      (12 * (dateTo.getFullYear() - dateFrom.getFullYear()))
   }
function Crypto_Encrypt(e) 
{
    var mykey = crypto.createCipher('aes-128-cbc',gv.CRYPTO_SECRET_INSTA_MOJO);
    var key = mykey.update(e.toString(), 'utf8', 'hex')
    key += mykey.final('hex');
    return key;
}
function Crypto_Decrypt(e)
{
    var mykey = crypto.createDecipher('aes-128-cbc', gv.CRYPTO_SECRET_INSTA_MOJO);
    var mystr = mykey.update(e.toString(), 'hex', 'utf8')
    mystr += mykey.final('utf8');
    console.log(mystr); 
    return mystr;
}
function NotFree(id)
{
    return new Promise((resolve,reject)=>{
        Cpanel.find({_id:gv.CPANEL},(err,docs)=>
        {
            console.log('Err  : '+err)
            console.log("Docs : "+docs)
            if(!err&&docs[0].free>0)
            {
                Cpanel.update({_id:gv.CPANEL},{ $inc: { free: -1 } },(err,docs)=>{
                    if(!err)
                    {
                        Users.update({id:id},{IsPayed:true,IsRenewed:true,lastPayed:GetDate()},(err,docs)=>
                        {
                            if(!err)
                            {
                                console.log("Free Signup")
                                reject();
                            }
                            else
                                resolve();
                        })
                    }
                    else
                        resolve();
                })
            }
            else
                resolve();
        })
    });
}
module.exports = log;
